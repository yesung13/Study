*API(Application Programming Interface)
프로그램과 또 다른 프로그램을 연결해주는 일종의 다리 역할. 
내가 만든 서비스가 개인개발자, 기업, 기관이 제공하는 기능, 프로그램을 사용할 수 있게 도와주는 중간 매개체.

*DBMS 종류
계층형(Hierachical) 데이터베이스 관리 시스템(HDBMS)
: 데이터가 계층적이며 상하 종속적인 관계로 구성
- 장점 : 데이터의 엑세스 속도가 빠르고, 데이터의 사용량을 쉽게 예측 할 수 있다.
- 단점 : 상하 종속적인 관계로 구성되어 있어 초기 세팅 후 변화하는 프로세스를 수용하기가 쉽지 않다.

네트워크(Network) 데이터베이스 관리 시스템 (NDBMS)
: 데이터 구조를 네트워크상의 노드 형태로 논리적이게 표현한 데이터 모델로서 각각의 노드를 서로 대등한 관계로 구성한 시스템(여기서 노드란 시스템을 의미하는 것이 아니라 자료를 말한다.)
- 장점 : 계층형 데이터베이스 관리시스템의 문제점인 상하 종속적인 관계는 해결되었다.
- 단점 : 구성과 설계가 복잡하고 궁극적으로 데이터의 종속성을 해결하지 못하였다.

관계형(Relational) 데이터베이스 관리 시스템(RDBMS)
: 수학적 논리 관계를 테이블의 형태로 구성한 구조로서 테이블 내의 컬럼 중 일부를 다른 테이블과 중복해 각 테이블간의 상관관계를 정의
- 장점 : 업무 변화에 대한 적응력 높아 변화하는 업무에 쉽게 활용하며 유지보수 편리하다. 따라서 생산성도 향상된다.
- 단점 : 다른 DBMS 보다 더 많은 자원이 활용되어 시스템의 부하가 높다.

객체지향(Object Oriented) 데이터베이스 관리 시스템(ODBMS)
: 멀티미디어 데이터의 원활한 처리와 RDBMS의 비지니스형 데이터 타입만 처리되는 기본적인 제한점을 극복하고자 고안



