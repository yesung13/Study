*API(Application Programming Interface)
프로그램과 또 다른 프로그램을 연결해주는 일종의 다리 역할. 
내가 만든 서비스가 개인개발자, 기업, 기관이 제공하는 기능, 프로그램을 사용할 수 있게 도와주는 중간 매개체.

*DBMS 종류
계층형(Hierachical) 데이터베이스 관리 시스템(HDBMS)
: 데이터가 계층적이며 상하 종속적인 관계로 구성
- 장점 : 데이터의 엑세스 속도가 빠르고, 데이터의 사용량을 쉽게 예측 할 수 있다.
- 단점 : 상하 종속적인 관계로 구성되어 있어 초기 세팅 후 변화하는 프로세스를 수용하기가 쉽지 않다.

네트워크(Network) 데이터베이스 관리 시스템 (NDBMS)
: 데이터 구조를 네트워크상의 노드 형태로 논리적이게 표현한 데이터 모델로서 각각의 노드를 서로 대등한 관계로 구성한 시스템(여기서 노드란 시스템을 의미하는 것이 아니라 자료를 말한다.)
- 장점 : 계층형 데이터베이스 관리시스템의 문제점인 상하 종속적인 관계는 해결되었다.
- 단점 : 구성과 설계가 복잡하고 궁극적으로 데이터의 종속성을 해결하지 못하였다.

관계형(Relational) 데이터베이스 관리 시스템(RDBMS)
: 수학적 논리 관계를 테이블의 형태로 구성한 구조로서 테이블 내의 컬럼 중 일부를 다른 테이블과 중복해 각 테이블간의 상관관계를 정의
- 장점 : 업무 변화에 대한 적응력 높아 변화하는 업무에 쉽게 활용하며 유지보수 편리하다. 따라서 생산성도 향상된다.
- 단점 : 다른 DBMS 보다 더 많은 자원이 활용되어 시스템의 부하가 높다.

객체지향(Object Oriented) 데이터베이스 관리 시스템(ODBMS)
: 멀티미디어 데이터의 원활한 처리와 RDBMS의 비지니스형 데이터 타입만 처리되는 기본적인 제한점을 극복하고자 고안

*WAS(Web Application Server)
동적 컨텐츠를 제공하기 위해 만들어진 애플리케이션 서버 (DB조회, 로직처리가 요구되는 컨텐츠)

JSP,Servlet 구동 환경 제공

컨테이너, 웹컨테이너, 서블릿 컨테이너라고도 부름

* JSP, servlet을 실행시킬 수 있는 소프트웨어 = 컨테이너

동작 프로세스

1. 웹서버로부터 요청이 오면 컨테이너가 받아서 처리

2. 컨테이너는 web.xml을 참조하여 해당 서블릿에 대한 쓰레드 생성하고 httpServletRequest와 httpServletResponse 객체를 생성하여 전달한다.

3. 컨테이너는 서블릿을 호출한다.

4. 호출된 서블릿의 작업을 담당하게 된 쓰레드(2번에서 만든 쓰레드)는 doPost()또는 doGet()을 호출한다.

5. 호출된 doPost(), doGet() 메소드는 생성된 동적 페이지를 Response객체에 담아 컨테이너에 전달한다.

6. 컨테이너는 전달받은 Response객체를 HTTPResponse형태로 바꿔 웹서버에 전달하고 생성되었던 쓰레드를 종료하고 httpServletRequest, httpServletResponse 객체를 소멸시킨다.

대표 : Tomcat, Jeus, JBoss

출처: https://jeong-pro.tistory.com/84 [기본기를 쌓는 정아마추어 코딩블로그]

